#!/usr/bin/env node

var projs = require('../index');
var optimist = require('optimist');
var argv = optimist.argv;
var task = require('../lib/task');
var $version = '0.4.0';

task.on('setConfig', function(data) {
  if (data.code == 2) {
    console.log('\n  Error: ' + data.msg + '\n');
  } else if (data.code == 1) {
    console.log('设置' + data.data.name + '成功！');
  }
});

var keys = Object.keys(argv),
  len = 0;

console.log(argv);
if (keys.length == 2) {
  len = 1;
  argv = optimist.usage('Usage: $0 ')
    .demand(len)
    .alias('r', 'run')
    .describe('r', 'run the server.')
    .alias('d', 'deploy')
    .describe('d', 'deploy the project.')
    .alias('c', 'config')
    .describe('c', 'set or get the config.')
    .alias('i', 'install')
    .describe('i', 'install plugin.')
    .alias('v', 'version')
    .describe('v', 'the version.')
    .alias('h', 'help')
    .describe('h', 'Doc: https://github.com/stri/projs')
    .argv;
} else if (argv._.length == 0 && (argv.r || argv.run || argv.v || argv.version || argv.h || argv.help)) {
  if (argv.h || argv.help) {
    console.log('Document: https://github.com/stri/projs');
  } else if (argv.r || argv.run) {
    projs.start();
  } else {
    console.log($version);
  }
} else if (argv._.length == 0 && (argv.c || argv.config || argv.i || argv.install)) {

  if (argv.i || argv.install) {
    argv = optimist.usage('Usage: $0 [url]  -i[--install]')
      .demand(1)
      .alias('i', 'install')
      .describe('i', 'install plugins.')
      .argv;
  } else {
    projs.getConfig(function(conf) {
      console.log('\n' + JSON.stringify(conf, null, true).replace(/{|}/gi, '  ').replace(/\,\"/gi, '\n  "') + '\n');
    });
  }

} else if (argv._.length == 1 && (argv.i || argv.install)) {
  console.log('?????')
  if (argv.c || argv.config) {
    projs.installConfig(argv._[0]);
  } else {
    projs.pack.install(argv._[0]);
  }
} else if (argv._.length == 1 && (argv.c || argv.config)) {
  len = 1;
  argv = optimist.usage('Usage: $0 [name] [value] -c[--config]')
    .demand(len)
    .alias('c', 'config')
    .describe('c', 'set or get the config.')
    .argv;
  if (argv.c || argv.config) {
    projs.getConfig(argv._[0], function(value) {
      console.log(value);
    });
  }
} else if (argv._.length == 2 && (argv.c || argv.config)) {
  projs.setConfig(argv._[0], argv._[1]);
} else if (argv.d || argv.deploy) {
  len = 2
  argv = optimist.usage('Usage: $0 [from] [to] -d[--deploy] -u[--username] xx -p[--password] xx')
    .demand(len)
    .alias('d', 'deploy')
    .describe('d', 'Deploy the project.')
    .alias('u', 'username')
    .describe('u', 'Your Svn or Git username.')
    .alias('p', 'password')
    .describe('p', 'Your Svn or Git password.')
    .argv;

  projs.compress(argv._[0], argv._[1], argv.u || argv.username, argv.p || argv.password);
}

// // 启动服务
// if(argv._[0] == 'start' || argv.start){
//   projs.start();
//   return;
// }

// // 安装插件
// if (argv._[0] == 'install'){
//   if(argv._[1]){
//     projs.pack.install(argv._[1]);
//   }else {
//     console.log('<command>: projs install [path|http|https]');
//     console.log('<description>: 安装打包插件')
//   }
//   return;
// }

// // 获取版本号
// if (argv.version || argv.v){
//   console.log($version);
//   return;
// }

// // 设置参数
// if (argv.config || argv.c){
//   (function(){
//     var conf = '';
//     if(argv._.length == 2){ 
//       return projs.setConfig(argv._[0],argv._[1] );
//     }else if(argv._.length == 1){
//       var conf = projs.getConfig(argv._[0]);
//       return console.log(conf);
//     }else{
//       conf = projs.getConfig();
//       return console.log('\n'+JSON.stringify(conf).replace(/{|}/gi,'  ').replace(/\,\"/gi,'\n  "')+'\n');
//     }
//   })();
//   return;
// }

// // 打包
// if (argv.compress || argv._.length > 1){
//   (function(from,to,username,password){
//     if(!from && !to){
//       console.log('<command>: projs [from] [to] --compress [--username][--password]');
//       console.log('<description>:');
//       console.log('      1) 如果[from]为SVN地址时，需填写--username和--password');
//       console.log('      2) 如果没有[from]，那么[from]等于[to]');
//       return;
//     }

//     // 如果是SVN地址
//     if(/^http/gi.test(from)){
//       if(username && password){
//         projs.compress(from,to,username,password);
//       }
//     }else {
//       projs.compress(null,from);
//     }
//   })(argv._[0],argv._[1],argv.username,argv.password);
//   return;
// }

// console.log(getDefaultText());

// function getDefaultText(){
//   var text = [''];
//   text.push('Usage: projs <command>');
//   text.push('--------------------------------');
//   text.push('--start     启动服务');
//   text.push('--config    设置参数');
//   text.push('--compress  打包');
//   text.push('--version   获取版本号');
//   text.push('install     安装插件包');
//   text.push('--------------------------------');
//   text.push('version: '+$version);
//   text.push('github: https://github.com/stri/projs\n');
//   text.push(' ')

//   return text.join('\n  ');
// }

// /**
//  * 没有设置这个值
//  * @param   {[type]}   obj  [description]
//  * @return  {Boolean}       [description]
//  */
// function isUndefined(obj){
//   return typeof obj === 'undefined';
// }

// /**
//  * 是有用的key
//  * @param   {[type]}   key  [description]
//  * @return  {Boolean}       [description]
//  */
// function isOwnProperty(key){
//   return argv.hasOwnProperty(key);
// }