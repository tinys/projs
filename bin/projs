#!/usr/bin/env node

var projs = require('../index');
var optimist = require('optimist');
var argv = optimist.argv;
var task = require('../lib/task');

task.on('setConfig', function(data) {
  if (data.code == 2) {
    console.log('\n  Error: ' + data.msg + '\n');
  } else if (data.code == 1) {
    console.log('设置' + data.data.name + '成功！');
  }
});

var keys = Object.keys(argv),
  len = 0;

if (keys.length == 2) {
  len = 1;
  argv = optimist.usage('Usage: $0 ')
    .demand(len)
    .alias('r', 'run')
    .describe('r', 'run the server.')
    .alias('d', 'deploy')
    .describe('d', 'deploy the project.')
    .alias('c', 'config')
    .describe('c', 'set or get the config.')
    .alias('i', 'install')
    .describe('i', 'install plugin.')
    .alias('v', 'version')
    .describe('v', 'the version.')
    .alias('h', 'help')
    .describe('h', 'Doc: https://github.com/stri/projs')
    .argv;
} else if (argv._.length == 0 && (argv.r || argv.run || argv.v || argv.version || argv.h || argv.help)) {
  if (argv.h || argv.help) {
    console.log('Document: https://github.com/stri/projs');
  } else if (argv.r || argv.run) {
    projs.start();
  } else {
    console.log(projs.getVersion());
  }
} else if (argv._.length == 0 && (argv.c || argv.config || argv.i || argv.install)) {

  if (argv.i || argv.install) {
    argv = optimist.usage('Usage: $0 [url]  -i[--install]')
      .demand(1)
      .alias('i', 'install')
      .describe('i', 'install plugins.')
      .argv;
  } else {
    projs.getConfig(function(conf) {
      console.log('\n' + JSON.stringify(conf, null, true).replace(/{|}/gi, '  ').replace(/\,\"/gi, '\n  "') + '\n');
    });
  }

} else if (argv._.length == 1 && (argv.i || argv.install)) {
  if (argv.c || argv.config) {
    projs.installConfig(argv._[0]);
  } else {
    projs.pack.install(argv._[0]);
  }
} else if (argv._.length == 1 && (argv.c || argv.config)) {
  len = 1;
  argv = optimist.usage('Usage: $0 [name] [value] -c[--config]')
    .demand(len)
    .alias('c', 'config')
    .describe('c', 'set or get the config.')
    .argv;
  if (argv.c || argv.config) {
    projs.getConfig(argv._[0], function(value) {
      console.log(value);
    });
  }
} else if (argv._.length == 2 && (argv.c || argv.config)) {
  projs.setConfig(argv._[0], argv._[1]);
} else if (argv.d || argv.deploy) {
  len = 2
  argv = optimist.usage('Usage: $0 [from] [to] -d[--deploy] -u[--username] xx -p[--password] xx')
    .demand(len)
    .alias('d', 'deploy')
    .describe('d', 'Deploy the project.')
    .alias('u', 'username')
    .describe('u', 'Your Svn or Git username.')
    .alias('p', 'password')
    .describe('p', 'Your Svn or Git password.')
    .argv;

  projs.compress(argv._[0], argv._[1], argv.u || argv.username, argv.p || argv.password,argv.force);
}
